// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component should match the snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <HeaderSection />
    <ToastContainer
      autoClose={5000}
      bodyClassName={null}
      className={null}
      closeButton={
        <CloseButton
          ariaLabel="close"
        />
      }
      closeOnClick={true}
      draggable={true}
      draggablePercent={80}
      hideProgressBar={false}
      newestOnTop={false}
      pauseOnFocusLoss={true}
      pauseOnHover={true}
      position="top-right"
      progressClassName={null}
      progressStyle={null}
      role="alert"
      rtl={false}
      style={null}
      toastClassName={null}
      transition={[Function]}
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(LoginContainer)",
          "type": [Function],
        }
      }
      exact={true}
      path="/login"
    />
    <Switch>
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Landing)",
            "type": [Function],
          }
        }
        exact={true}
        path="/"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Landing)",
            "type": [Function],
          }
        }
        path="/about"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(SignUpUserForm)",
            "type": [Function],
          }
        }
        path="/signup"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(AllArticles)",
            "type": [Function],
          }
        }
        path="/articles"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(ResetPasswordContainer)",
            "type": [Function],
          }
        }
        path="/reset"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(SearchArticles)",
            "type": [Function],
          }
        }
        exact={true}
        path="/search/:searchkey"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(CreateArticle)",
            "protoTypes": Object {
              "isArticlePosted": [Function],
              "postAnArticle": [Function],
            },
            "type": [Function],
          }
        }
        path="/create-article"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(ArticleContainer)",
            "type": [Function],
          }
        }
        path="/article/:slug"
      />
      <Route
        component={[Function]}
        path="/profile"
      />
      <Route
        component={[Function]}
        path="/editprofile"
      />
    </Switch>
    <FootSection />
  </BrowserRouter>
</Provider>
`;
